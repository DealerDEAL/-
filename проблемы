#include <stdio.h>
#include <string>
#include <stdlib.h> 
#include <time.h>
#include <iostream>
#include <iomanip>
#include <fstream>

using namespace std;

std::string convert(int arr[], int n) {
    std::string s;
    for (int i = 0; i < n; i++) {
        s += std::to_string(arr[i]);
    }
    return s;
}

int main()
{
    int a1=99, b=100, x=96, a2=99;
    int digit_1[a1+1];
    int digit_2[a2+1];
    int result[b+1];
    unsigned long long int result_pol1;
    unsigned long long int result_pol2;
    do{
        bool jester_shild = true;
        while(jester_shild == true){
            std::cout << "\nenter the digits from 1 to 9 in the cell of the first array\n";
            int g;
            std::cin >> g;
            if(g <= 9 && g != 0){
                jester_shild = false;
            }
            if(jester_shild==true){
                cout << "error";
            }
            if(jester_shild==false){
                digit_1[a1]=g;
                cout << "\n" << digit_1[a1] <<"\n";
                //cout<<"\n"<<a1<<"\n";
                a1--;
            }
        }
    }while(a1>=98);
    // is_digit(num[i]) == 1 && (num[i] >= 0 && num[i] < 10)
    do{
        bool jester_shild = true;
        while(jester_shild == true){
            std::cout << "\nenter the digits from 1 to 9 in the cell of the second array\n";
            int l;
            std::cin >> l;
            if(l <=9 && l != 0){
                jester_shild = false;
            }
            if(jester_shild==true){
                cout << "error";
            }
            if(jester_shild == false){
                digit_2[a2]=l;
                cout << "\n" << digit_2[a2] <<"\n";
                a2--;
                //cout<<a2<<"\n";
            }
            
        }
    }while(a2>=98);
    
    int n1 = sizeof(digit_1) / sizeof(*digit_1);
 
    std::string inp1 = convert(digit_1, n1);
    
    const char* c_inp1 = inp1.c_str();
 
    // Use atoi() to convert C-string to integer
    result_pol1 = atoi(c_inp1);
    
    //int i;
    
    //i=result_pol1
    
    cout << "\n" << result_pol1;
    
    
    int n2 = sizeof(digit_2) / sizeof(*digit_2);
    
    std::string inp = convert(digit_2, n2);
    
    const char* c_inp = inp.c_str();
 
    // Use atoi() to convert C-string to integer
    result_pol2 = atoi(c_inp);
    
    cout << "\n" << result_pol2;
 
 
    
    //for (int i=0; i<a; i++){
    //   unsigned long long int result_pol= 
    //}

    return 0;
}
